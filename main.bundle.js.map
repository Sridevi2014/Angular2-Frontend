{"version":3,"sources":["C:/Users/murty/Desktop/Angular2-Frontend/src/$_gendir lazy","C:/Users/murty/Desktop/Angular2-Frontend/src/app/app.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/app.module.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/auth.service.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/home.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/login.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/messages.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/nav.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/new-message.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/register.component.html","C:/Users/murty/Desktop/Angular2-Frontend/src/app/register.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/user.component.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/app/web.service.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/environments/environment.ts","C:/Users/murty/Desktop/Angular2-Frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/murty/Desktop/Angular2-Frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { Component} from '@angular/core';\r\nimport { MessagesComponent } from './messages.component';\r\nimport { NewMessageComponent } from './new-message.component';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <nav></nav>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class AppComponent  {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCardModule, MatInputModule, MatSnackBarModule, MatToolbarModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { MessagesComponent } from './messages.component';\nimport { AppComponent } from './app.component';\nimport { WebService } from './web.service';\nimport { NewMessageComponent } from './new-message.component';\nimport { NavComponent } from './nav.component';\nimport { HomeComponent } from './home.component';\nimport { RegisterComponent } from './register.component';\nimport { AuthService } from './auth.service';\nimport  { LoginComponent } from './login.component';\nimport { UserComponent } from './user.component';\n\nvar routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'messages',\n    component: MessagesComponent\n  },\n  {\n    path: 'messages/:name',\n    component: MessagesComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'user',\n    component: UserComponent\n  }];\n\n\n\n@NgModule({\n  imports: [BrowserModule, HttpModule, FormsModule, ReactiveFormsModule, RouterModule.forRoot(routes), BrowserAnimationsModule, MatButtonModule, MatCardModule, MatInputModule, MatSnackBarModule, MatToolbarModule],\n  declarations: [AppComponent, MessagesComponent, NewMessageComponent, NavComponent, HomeComponent, RegisterComponent, LoginComponent, UserComponent],\n  bootstrap: [AppComponent],\n  providers: [WebService, AuthService]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    BASE_URL = 'http://localhost:63145/auth';\r\n    NAME_KEY = 'name';\r\n    TOKEN_KEY = 'token'\r\n\r\n    constructor(private http: Http, private router: Router) { }\r\n\r\n    get name() {\r\n        return localStorage.getItem(this.NAME_KEY);\r\n    }\r\n\r\n    get isAuthenticated() {\r\n        return !!localStorage.getItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    get tokenHeader() {\r\n        var header = new Headers({'Authorization': 'Bearer ' + localStorage.getItem(this.TOKEN_KEY)});\r\n        return new RequestOptions({ headers: header});\r\n    }\r\n\r\n    login(loginData) {\r\n        this.http.post(this.BASE_URL + '/login', loginData).subscribe(res => {\r\n            this.authenticate(res);\r\n        })\r\n    }\r\n\r\n    register(user) {\r\n        delete user.confirmPassword;\r\n        this.http.post(this.BASE_URL + '/register', user).subscribe(res => {\r\n            this.authenticate(res);\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(this.NAME_KEY);\r\n        localStorage.removeItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    authenticate(res) {\r\n        var authResponse = res.json();\r\n\r\n        if (!authResponse.token)\r\n            return;\r\n\r\n        localStorage.setItem(this.TOKEN_KEY, authResponse.token)\r\n        localStorage.setItem(this.NAME_KEY, authResponse.firstName)\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/auth.service.ts","import { Component} from '@angular/core';\r\nimport { MessagesComponent } from './messages.component';\r\nimport { NewMessageComponent } from './new-message.component';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  template: `\r\n    <new-message></new-message>\r\n    <messages></messages>\r\n  `,\r\n})\r\nexport class HomeComponent  {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/home.component.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    template: `\r\n        <mat-card>\r\n            <mat-input-container>\r\n                <input matInput [(ngModel)]=\"loginData.email\" placeholder=\"Email\" type=\"email\">\r\n            </mat-input-container>\r\n            <mat-input-container>\r\n                <input matInput [(ngModel)]=\"loginData.password\" placeholder=\"Password\" type=\"password\">\r\n            </mat-input-container>\r\n            <button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>\r\n        </mat-card>\r\n    `\r\n})\r\nexport class LoginComponent {\r\n    constructor(private auth: AuthService) { }\r\n\r\n    loginData = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    login() {\r\n        this.auth.login(this.loginData);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/login.component.ts","import { Component } from '@angular/core'\r\nimport { WebService } from './web.service'\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'messages',\r\n    template: `\r\n    <div *ngFor=\"let message of webService.messages | async\">\r\n        <mat-card class=\"card\">\r\n            <mat-card-title [routerLink]=\"['/messages', message.owner]\" style=\"cursor: pointer\">{{message.owner}}</mat-card-title>\r\n            <mat-card-content>{{message.text}}</mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    `\r\n})\r\nexport class MessagesComponent {\r\n    constructor(private webService : WebService, private route: ActivatedRoute) {}\r\n\r\n    ngOnInit(){\r\n        var name = this.route.snapshot.params['name'];\r\n        this.webService.getMessages(name);\r\n        this.webService.getUser().subscribe();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/messages.component.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n    selector: 'nav',\r\n    template: `\r\n        <mat-toolbar color=\"primary\">\r\n            <button mat-button routerLink=\"/\" >Message Board</button>\r\n            <button mat-button routerLink=\"/messages\" >Messages</button>\r\n            <span style=\"flex: 1 1 auto\"></span>\r\n            <button *ngIf=\"!auth.isAuthenticated\"mat-button routerLink=\"/login\" >Login</button>\r\n            <button *ngIf=\"!auth.isAuthenticated\"mat-button routerLink=\"/register\" >Register</button>\r\n            <button *ngIf=\"auth.isAuthenticated\" mat-button routerLink=\"/user\" >Welcome {{auth.name}}</button>                                    \r\n            <button *ngIf=\"auth.isAuthenticated\" mat-button (click)=\"auth.logout()\" >Logout</button>                                                \r\n        </mat-toolbar>\r\n    `\r\n})\r\nexport class NavComponent {\r\n    constructor(private auth: AuthService) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/nav.component.ts","import { Component } from '@angular/core'\r\nimport { WebService } from './web.service'\r\nimport { AuthService } from './auth.service'\r\n \r\n //ngModel, two way binding, Angular material used for template\r\n@Component({\r\n    selector: 'new-message',\r\n    template: `\r\n        <mat-card class=\"card\">\r\n            <mat-card-content>\r\n                <mat-input-container>\r\n                    <textarea [(ngModel)]=\"message.text\" matInput placeholder=\"Message\"></textarea>\r\n                </mat-input-container>\r\n                <mat-card-actions>\r\n                    <button (click)=\"post()\" mat-button color=\"primary\">POST</button>\r\n                </mat-card-actions>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    `\r\n})\r\nexport class NewMessageComponent {\r\n\r\n    constructor(private webService : WebService, private auth: AuthService) {}\r\n\r\n    message = {\r\n        owner: this.auth.name,\r\n        text: \"\"\r\n    }\r\n\r\n    post() {\r\n        this.webService.postMessage(this.message);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/new-message.component.ts","module.exports = \"<mat-card>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('firstName')}\\\" matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('lastName')}\\\" matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('email')}\\\" type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('password')}\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('confirmPassword')}\\\" type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\">\\r\\n        </mat-input-container>\\r\\n        <br>\\r\\n        <span *ngIf=\\\"form.errors?.mismatchedFields\\\">Passwords do not match</span>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"primary\\\">Register</button>\\r\\n    </form>\\r\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/register.component.html\n// module id = ../../../../../src/app/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'register',\r\n    templateUrl: 'register.component.html',\r\n    styles: [`\r\n        .error {\r\n            background-color: #fff0f0\r\n        }\r\n    `]\r\n})\r\nexport class RegisterComponent {\r\n    form;\r\n\r\n    constructor(private fb: FormBuilder, private auth : AuthService) {\r\n        this.form = fb.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', [Validators.required, emailValid()]],\r\n            password: ['', Validators.required],\r\n            confirmPassword: ['', Validators.required]\r\n        }, { validator: matchingFields('password', 'confirmPassword') })\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.form.errors);\r\n        this.auth.register(this.form.value);\r\n    }\r\n\r\n    isValid(control) {\r\n        return this.form.controls[control].invalid && this.form.controls[control].touched\r\n    }\r\n}\r\n\r\nfunction matchingFields(field1, field2) {\r\n    return form => {\r\n        if (form.controls[field1].value !== form.controls[field2].value)\r\n            return { mismatchedFields: true }\r\n    }\r\n}\r\n\r\nfunction emailValid() {\r\n    return control => {\r\n        var regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n        return regex.test(control.value) ? null : { invalidEmail: true }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/register.component.ts","import { Component } from '@angular/core';\r\nimport { WebService } from './web.service';\r\n\r\n@Component({\r\n    selector: 'user',\r\n    template: `\r\n        <mat-card class=\"card\">\r\n            <mat-input-container>\r\n                <input matInput [(ngModel)]=\"model.firstName\" placeholder=\"First Name\">\r\n            </mat-input-container>\r\n            <mat-input-container>\r\n                <input mdInput [(ngModel)]=\"model.lastName\" placeholder=\"Last Name\">\r\n            </mat-input-container>\r\n            <button mat-raised-button color=\"primary\" (click)=\"saveUser(model)\">Save Changes</button>\r\n        </mat-card>\r\n    `\r\n})\r\nexport class UserComponent {\r\n\r\n    model = {\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    constructor(private webService: WebService) {}\r\n\r\n    ngOnInit() {\r\n        this.webService.getUser().subscribe( res => {\r\n            this.model.firstName = res.firstName;\r\n            this.model.lastName = res.lastName;\r\n        })\r\n    }\r\n\r\n    saveUser(userData) {\r\n        this.webService.saveUser(userData).subscribe();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/user.component.ts","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Subject } from 'rxjs/Rx'\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class WebService {\r\n    BASE_URL = 'http://localhost:63145/api';\r\n\r\n    private messageStore = [];\r\n\r\n    private messageSubjet = new Subject();\r\n    \r\n    messages = this.messageSubjet.asObservable();\r\n\r\n    constructor(private http: Http, private sb: MatSnackBar, private auth: AuthService) {\r\n        this.getMessages('');\r\n    }\r\n\r\n    getMessages(user) {\r\n        user = (user) ? '/' + user : '';\r\n        this.http.get(this.BASE_URL + '/messages' + user).subscribe(response => {\r\n            this.messageStore = response.json();\r\n            this.messageSubjet.next(this.messageStore);\r\n        }, error => {\r\n            this.handleError(\"Unable to get messages\");\r\n        });\r\n    }\r\n\r\n    async postMessage(message) {\r\n        try {\r\n            var response = await this.http.post(this.BASE_URL + '/messages', message).toPromise();\r\n            this.messageStore.push(response.json());\r\n            this.messageSubjet.next(this.messageStore);\r\n        } catch (error) {\r\n            this.handleError(\"Unable to post message\");\r\n        }\r\n\r\n    }\r\n    \r\n    //get user data\r\n    getUser() {\r\n        return this.http.get(this.BASE_URL + '/users/me', this.auth.tokenHeader).map(res => res.json());\r\n    }\r\n    \r\n    //user data saved\r\n    saveUser(userData) {\r\n        return this.http.post(this.BASE_URL + '/users/me', userData,this.auth.tokenHeader).map(res => res.json());\r\n    }\r\n\r\n    private handleError(error) {\r\n        console.error(error);\r\n        this.sb.open(error, 'close', { duration: 2000 });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/app/web.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/murty/Desktop/Angular2-Frontend/src/main.ts"],"sourceRoot":"webpack:///"}